#!/usr/bin/env python

# Feel free to alter this script as desired to create the perfect PDF
# for your presentation.

from __future__ import print_function
import argparse
import os.path
import subprocess


def main():

    # Setup argument parser and parse the arguments.
    parser = argparse.ArgumentParser(
            description="Simple driver for pandoc. " +
                        "Or use pandoc directly for more options.")
    parser.add_argument(
            "--format", "-f",
            choices=["beamer", "slides", "handout", "paper"],
            default="slides",
            help="output format, slides is an alias for beamer")
    parser.add_argument(
            "--incremental",
            "-i",
            default=False,
            action="store_true",
            help="incremental display of lists")
    parser.add_argument(
        "source",
        default="talk.md",
        nargs="?",
        help="Source markdown file, defaults to 'talk.md'")
    args = parser.parse_args()
    output = os.path.splitext(args.source)[0] + ".pdf" #".tex"

    # Construct call to pandoc.
    if args.format in ["beamer", "slides"]:
        pan_args = ["pandoc", "-f", "markdown", "-V", "theme:PaloAlto"]
        if args.incremental:
            pan_args.append("--incremental")
        pan_args.extend(["--write", "beamer",
                         "--out", output, args.source])
    elif args.format in ["handout", "paper"]:
        pan_args = ["pandoc",
                    "--from", "markdown",
                    "--to", "latex",
                    "--out", output,
                    args.source]

    # Call pandoc to generate the pdf.
    print("Executing:", " ".join(pan_args))
    subprocess.check_call(pan_args)


if __name__ == "__main__":
    main()

